#!/usr/bin/env bun

// Simple test script to demonstrate API functionality
const API_BASE = 'http://localhost:3000';

interface ApiResponse<T = any> {
  success: boolean;
  data?: T;
  message?: string;
  error?: string;
}

async function testAPI() {
  console.log('🧪 Testing Elysia Drizzle Boilerplate API...\n');
  
  try {
    // Test health check
    console.log('📊 Testing health check...');
    const healthResponse = await fetch(`${API_BASE}/health`);
    const health = await healthResponse.json() as ApiResponse;
    console.log('✅ Health check:', health.status);
    console.log(`   Database: ${health.database}\n`);
    
    // Test create user
    console.log('👤 Creating test user...');
    const createUserResponse = await fetch(`${API_BASE}/api/v1/users`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        name: 'Test User',
        email: `test-${Date.now()}@example.com`,
        bio: 'Generated by test script'
      })
    });
    const createUser = await createUserResponse.json() as ApiResponse;
    console.log('✅ User created:', createUser.data?.name);
    const userId = createUser.data?.id;
    
    // Test create post
    console.log('📝 Creating test post...');
    const createPostResponse = await fetch(`${API_BASE}/api/v1/posts`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        title: 'Test Post',
        content: 'This post was created by the test script.',
        authorId: userId
      })
    });
    const createPost = await createPostResponse.json() as ApiResponse;
    console.log('✅ Post created:', createPost.data?.title);
    
    // Test get posts with authors
    console.log('🔍 Fetching posts with authors...');
    const postsResponse = await fetch(`${API_BASE}/api/v1/posts`);
    const posts = await postsResponse.json() as ApiResponse;
    console.log(`✅ Found ${posts.data?.length} posts`);
    if (posts.data?.length > 0) {
      console.log(`   Latest post: "${posts.data[0].title}" by ${posts.data[0].author?.name}`);
    }
    
    // Test get users
    console.log('👥 Fetching users...');
    const usersResponse = await fetch(`${API_BASE}/api/v1/users`);
    const users = await usersResponse.json() as ApiResponse;
    console.log(`✅ Found ${users.data?.length} users`);
    
    console.log('\n🎉 All tests passed! The API is working correctly.');
    
  } catch (error) {
    console.error('❌ Test failed:', error);
    process.exit(1);
  }
}

// Run tests if script is executed directly
if (import.meta.main) {
  testAPI();
}

export { testAPI };